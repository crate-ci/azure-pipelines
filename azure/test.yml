parameters:
  rust: stable
  allow_fail: false
  cross: false
  envs: {}
  setup: []
  test_ignored: false
  single_threaded: false
  features: '' # empty feature list is == default
  arguments: '--' # Defaults to the separator between cargo opts and libtest opts

jobs:
- job: ${{ parameters.name }}
  ${{ if eq('true', parameters.test_ignored) }}:
    displayName: cargo +${{ parameters.rust }} test -- --ignored
  ${{ if ne('true', parameters.test_ignored) }}:
    displayName: cargo +${{ parameters.rust }} test
  continueOnError: ${{ parameters.allow_fail }}
  ${{ if eq('true', parameters.cross) }}:
    strategy:
      matrix:
        Linux:
          vmImage: ubuntu-16.04
        MacOS:
          vmImage: macOS-10.14
        Windows:
          vmImage: windows-2019
  variables:
    ${{ if ne('true', parameters.cross) }}:
      vmImage: ubuntu-16.04
    cargo_opts: ''
    libtest_opts: ''
  pool:
    vmImage: $(vmImage)
  steps:
  - template: _setup.yml
    parameters:
      rust: ${{ parameters.rust }}
      setup: ${{ parameters.setup }}
  # Cargo options go here
  - bash: echo '##vso[task.setvariable variable=cargo_opts]$(cargo_opts) --all'
  - ${{ if eq(true, parameters.features)}}:
    - bash: echo '##vso[task.setvariable variable=cargo_opts]$(cargo_opts) --features "${{ parameters.features }}"'
  # Libtest options go here
  - ${{ if eq('true', parameters.single_threaded) }}:
    - bash: echo '##vso[task.setvariable variable=libtest_opts]$(libtest_opts) --test-threads=1'
  # Run tests with the given options
  - bash: cargo test $(cargo_opts) ${{ parameters.arguments }} $(libtest_opts)
    displayName: Run tests
    env:
      ${{ insert }}: ${{ parameters.envs }}
  - ${{ if eq('true', parameters.test_ignored)}}:
    - bash: cargo test $(cargo_opts) ${{ parameters.arguments }} $(libtest_opts) --ignored
      displayName: Run ignored tests
      env:
        ${{ insert }}: ${{ parameters.envs }}

